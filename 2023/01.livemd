<!-- livebook:{"app_settings":{"access_type":"public","show_source":true,"slug":"aoc-2023-01"}} -->

# Advent of Code 2023 - Day 01

```elixir
Mix.install([
  {:kino, "~> 0.11.0"},
  {:kino_aoc, github: "ljgago/kino_aoc"}
])
```

## Input

<!-- livebook:{"attrs":{"assign_to":"puzzle_input","day":"1","session_secret":"AOC_SESSION","year":"2023"},"chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2023", "1", System.fetch_env!("LB_AOC_SESSION"))
```

```elixir
document =
  puzzle_input
  |> String.split("\n")
```

## Part 1

```elixir
document
|> Stream.map(fn line ->
  matches =
    Regex.scan(~r/\d/, line)
    |> List.flatten()

  first = List.first(matches)
  last = List.last(matches)

  String.to_integer("#{first}#{last}")
end)
|> Enum.sum()
```

## Part 2

```elixir
pattern = ~r/(?=(\d|one|two|three|four|five|six|seven|eight|nine))/

document
|> Stream.map(fn line ->
  matches =
    Regex.scan(pattern, line, capture: :all_but_first)
    |> List.flatten()
    |> Enum.map(fn
      "one" -> "1"
      "two" -> "2"
      "three" -> "3"
      "four" -> "4"
      "five" -> "5"
      "six" -> "6"
      "seven" -> "7"
      "eight" -> "8"
      "nine" -> "9"
      input -> input
    end)

  first = List.first(matches)
  last = List.last(matches)

  String.to_integer(first <> last)
end)
|> Enum.sum()
```

[![Run in Livebook](https://livebook.dev/badge/v1/blue.svg)](https://livebook.dev/run?url=https%3A%2F%2Fgithub.com%2Fpehbehbeh%2Fadventofcode%2Fblob%2Fmain%2F2023%2F01.livemd)

<!-- livebook:{"offset":1589,"stamp":{"token":"XCP.ZV7KXeNBVVOCrwvVVbyzyX3bo45w3VCdwW0mTv3_XK940e1e1wk-nIq7qMxZ-b_MmBoctokzGK_9bupdl7igfKTwMQzTLtXStqG_dcM6cjqnDEXQHiQ","version":2}} -->
